{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport ErrorPage from \"next/error\";\nimport { getStrapiURL, getPageData } from \"utils/api\";\nimport Sections from \"@/components/sections\";\nimport Seo from \"@/components/elements/seo\";\nimport { useRouter } from \"next/dist/client/router\"; // The file is called [[...slug]].js because we're using Next's\n// optional catch all routes feature. See the related docs:\n// https://nextjs.org/docs/routing/dynamic-routes#optional-catch-all-routes\n\nconst DynamicPage = ({\n  sections,\n  metadata,\n  preview\n}) => {\n  const router = useRouter(); // Check if the required data was provided\n\n  if (!router.isFallback && !(sections === null || sections === void 0 ? void 0 : sections.length)) {\n    return __jsx(ErrorPage, {\n      statusCode: 404\n    });\n  } // Loading screen (only possible in preview mode)\n\n\n  if (router.isFallback) {\n    return __jsx(\"div\", {\n      className: \"container\"\n    }, \"Loading...\");\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Seo, {\n    metadata: metadata\n  }), __jsx(Sections, {\n    sections: sections,\n    preview: preview\n  }));\n};\n\nexport async function getStaticPaths() {\n  // Get all pages from Strapi\n  const pages = await (await fetch(getStrapiURL(\"/pages\"))).json();\n  const paths = pages.map(page => {\n    // Decompose the slug that was saved in Strapi\n    const slugArray = page.slug.split(\"__\");\n    return {\n      params: {\n        slug: slugArray\n      }\n    };\n  });\n  return {\n    paths,\n    fallback: true\n  };\n}\nexport async function getStaticProps({\n  params,\n  preview = null\n}) {\n  // Find the page data for the current slug\n  let chainedSlugs;\n\n  if (params == {} || !params.slug) {\n    // To get the homepage, find the only page where slug is an empty string\n    chainedSlugs = ``;\n  } else {\n    // Otherwise find a page with a matching slug\n    // Recompose the slug that was saved in Strapi\n    chainedSlugs = params.slug.join(\"__\");\n  } // Fetch pages. Include drafts if preview mode is on\n\n\n  const pageData = await getPageData(chainedSlugs, preview);\n\n  if (pageData == null) {\n    // Giving the page no props will trigger a 404 page\n    return {\n      props: {}\n    };\n  } // We have the required page data, pass it to the page component\n\n\n  const {\n    contentSections,\n    metadata\n  } = pageData;\n  return {\n    props: {\n      preview,\n      sections: contentSections,\n      metadata\n    }\n  };\n}\nexport default DynamicPage;","map":null,"metadata":{},"sourceType":"module"}